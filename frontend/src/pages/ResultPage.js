import React from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { Box, Typography, Button, Paper } from '@mui/material';
import PersonalityTypeChart from "../components/PersonalityTypeChart";
import CompatibilityGrid from "../components/CompatibilityGrid";
import jsPDF from "jspdf";


function ResultPage() {

    const location = useLocation();

    const result = location.state?.result;

    const navigate = useNavigate();


    const handleRetakeQuiz = () => {
        navigate('/quiz');
    }
    const handleDownloadPDF = () => {
        const pdf = new jsPDF();


        pdf.setFontSize(22);
        pdf.setTextColor(245, 158, 11);
        pdf.setFont("helvetica", "bold");
        pdf.text("PersonaFi - Your Financial Personality Result", 20, 30);


        pdf.setDrawColor(200, 200, 200);
        pdf.line(20, 35, 190, 35);


        const dateStr = new Date().toLocaleString();
        pdf.setFontSize(10);
        pdf.setTextColor(120);
        pdf.setFont("helvetica", "normal");
        pdf.text(`Generated on: ${dateStr}`, 20, 42);


        pdf.setFontSize(16);
        pdf.setTextColor(30, 58, 138);
        pdf.setFont("helvetica", "bold");
        pdf.text(`Personality Type: ${result.type}`, 20, 55);


        pdf.setFontSize(14);
        pdf.setTextColor(0, 0, 0);
        pdf.text("Description:", 20, 65);
        pdf.setFontSize(12);
        pdf.setFont("helvetica", "normal");
        pdf.text(result.description, 20, 72, { maxWidth: 170, lineHeightFactor: 1.4 });


        pdf.setFontSize(14);
        pdf.setFont("helvetica", "bold");
        pdf.text("Tips:", 20, 90);
        pdf.setFontSize(12);
        pdf.setFont("helvetica", "normal");
        pdf.text(result.tips, 20, 97, { maxWidth: 170, lineHeightFactor: 1.4 });


        pdf.setFontSize(13);
        pdf.setTextColor(34, 197, 94);
        pdf.setFont("helvetica", "bold");
        pdf.text("Thank you for using PersonaFi!", 20, 115);

 
        pdf.setFontSize(12);
        pdf.setTextColor(80, 80, 80);
        pdf.setFont("helvetica", "normal");
        pdf.text(
            "I hope this quiz gave you useful insights into your financial personality and habits.\n\nIf you enjoyed this project or want to connect with me:",
            20,
            122,
            { maxWidth: 170, lineHeightFactor: 1.4 }
        );


        pdf.setTextColor(30, 64, 175);
        pdf.textWithLink("Click here for my LinkedIn", 20, 140, { url: "https://www.linkedin.com/in/hayden-baek/" });

    
        pdf.setTextColor(220, 38, 38);
        pdf.textWithLink("Click here for my YouTube Channel", 20, 148, { url: "https://www.youtube.com/channel/UCzemOcCiCXHzQ6COYkV3BCA" });


        pdf.setFontSize(10);
        pdf.setTextColor(120);
        pdf.setFont("helvetica", "italic");
        pdf.text("Generated by PersonaFi - Financial Personality Profiling App", 20, 280);


        pdf.save("PersonaFi_Result.pdf");
    };


    return (
        <Box
            sx={{
                minHeight: '100vh',
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
                backgroundColor: 'background.default',
                padding: 3,
            }}
        >
            <Paper elevation={4} sx={{ display: 'flex', flexDirection: 'row', padding: 4, maxWidth: '900px', width: '100%' }}>

                <Box sx={{ flex: 1, textAlign: 'center', paddingRight: 2, borderRight: '1px solid #ccc' }}>
                    <Typography variant="h4" color="primary" gutterBottom>
                        Your Personality Result
                    </Typography>

                    <Typography variant="h5" color="secondary" gutterBottom>
                        {result.type}
                    </Typography>
                </Box>


                <Box sx={{ flex: 2, paddingLeft: 2 }}>
                    <Typography variant="h6" color="text.primary" gutterBottom>
                        Description:
                    </Typography>
                    <Typography variant="body1" color="text.secondary" gutterBottom>
                        {result.description}
                    </Typography>

                    <Typography variant="h6" color="text.primary" gutterBottom>
                        Tips:
                    </Typography>
                    <Typography variant="body1" color="text.secondary" gutterBottom>
                        {result.tips}
                    </Typography>

                    <Button
                        variant="contained"
                        color="secondary"
                        onClick={handleRetakeQuiz}
                        sx={{ marginTop: 2 }}
                    >
                        Retake Quiz
                    </Button>
                    <Button
                        variant="contained"
                        color="primary"
                        onClick={handleDownloadPDF}
                        sx={{ marginTop: 2, marginRight: 2 }}
                    >
                        Download My Result (PDF)
                    </Button>

                </Box>
            </Paper>

            <h2>Personality Type Distribution</h2>
            <PersonalityTypeChart />

            <h2>Personality Type Compatibility Grid</h2>
            <CompatibilityGrid />
        </Box>
    );

}

export default ResultPage;
